name: Rust CI

# Based on:
# - https://www.infinyon.com/blog/2021/04/github-actions-best-practices/
# - https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md

on:
  push:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    working-directory: ./rust

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable]

    env:
      RUST_BACKTRACE: full
      RUSTV: ${{ matrix.rust }}
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
      - name: Cache cargo registry
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Tests
        run: cargo test

      - name: Build Release
        run: cargo build --release --all-features
      - run: mv target/release/spi target/release/spi_${{ matrix.os }}
      - name: Save production artifact
        uses: actions/upload-artifact@v2
        with:
          name: spi_${{ matrix.os }}
          path: rust/target/release/spi_${{ matrix.os }}
          if-no-files-found: error

  release:
    name: Release builds
    runs-on: ubuntu-latest
    needs: [build, fmt, clippy]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        id: download
      - name: Release To GitHub
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          automatic_release_tag: latest
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          files: ${{steps.download.outputs.download-path}}/spi_*/spi_*

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - run: cargo clippy -- -D warnings
